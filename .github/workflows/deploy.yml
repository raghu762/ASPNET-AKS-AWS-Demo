name: Build and Deploy to AWS EKS

on:
  push:
    branches: [ "main" ]
    #

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: demoapp
  EKS_CLUSTER_NAME: my-eks-cluster
  DEPLOYMENT_NAME: demoapp-deployment

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source
      uses: actions/checkout@v4

    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Build .NET app
      working-directory: DemoApp
      run: |
        dotnet restore
        dotnet publish -c Release -o out

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, Tag, and Push image to ECR
      working-directory: DemoApp
      run: |
        IMAGE_TAG=latest
        ECR_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG
        docker build -t $ECR_URI .
        docker push $ECR_URI
        echo "image=$ECR_URI" >> $GITHUB_ENV

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER_NAME }}

    - name: Deploy to EKS
      run: |
        kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} demoapp=${{ env.image }} --record || \
        kubectl apply -f k8s/
